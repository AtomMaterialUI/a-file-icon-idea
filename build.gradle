/*
 * The MIT License (MIT)
 *
 *  Copyright (c) 2020 Elior "Mallowigi" Boukhobza
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id "idea"
    id "java"
    id "org.jetbrains.intellij" version "0.6.5"
    id "de.undercouch.download" version "4.0.2"
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
    id "org.kordamp.gradle.markdown" version "2.2.0"
}

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/jetbrains/intellij-plugin-service' }
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url "https://www.jetbrains.com/intellij-repository/snapshots" }
}

dependencies {
    compile 'com.thoughtworks.xstream:xstream:1.4.10'
    implementation 'it.tidalwave.betterbeansbinding:betterbeansbinding-swingbinding:1.3.0'
    implementation 'org.javassist:javassist:3.27.0-GA'
}

sourceCompatibility = JavaVersion.toVersion(System.getenv("javaVersion") ?: javaVersion)
targetCompatibility = JavaVersion.toVersion(System.getenv("javaVersion") ?: javaVersion)

[compileKotlin, compileTestKotlin]*.kotlinOptions {
    languageVersion = kotlinLangVersion
    apiVersion = kotlinApiVersion
    jvmTarget = JavaVersion.toVersion(System.getenv("javaVersion") ?: javaVersion)
    freeCompilerArgs = ["-Xskip-runtime-version-check"]
}

sourceSets {
    main {
        java.srcDirs 'src/main/java'
        resources.srcDir 'src/main/resources'
    }
    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }
}

markdownToHtml {
    sourceDir file("$projectDir/changelog")
    outputDir file("$projectDir/changelog")
}


version = System.getenv("pluginVersion") ?: pluginVersion

intellij {
    pluginName 'Atom File Icons IDEA'
    version 'LATEST-EAP-SNAPSHOT'
    downloadSources true
//    sameSinceUntilBuild true
    alternativeIdePath idePath
    updateSinceUntilBuild = true

    patchPluginXml {
        version "$version"
        sinceBuild System.getenv("pluginSinceBuild") ?: sinceBuildP
        untilBuild System.getenv("pluginUntilBuild") ?: untilBuildP
        changeNotes file("$projectDir/changelog/CHANGELOG.html").text
    }

    buildSearchableOptions {
        enabled false
    }

    publishPlugin {
//        token file("$projectDir/publishToken").text ?: System.getenv("publishToken") ?: publishToken
//        username System.getenv("publishUsername") ?: publishUsername
//        password System.getenv("publishPassword") ?: publishPassword
//        channels = ['eap']
    }
}
